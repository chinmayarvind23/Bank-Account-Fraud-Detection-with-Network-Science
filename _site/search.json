[
  {
    "objectID": "code/index.html#sampling-procedure-justification",
    "href": "code/index.html#sampling-procedure-justification",
    "title": "Bank Account Fraud Detection - COSC 421 Course Project",
    "section": "Sampling Procedure & Justification",
    "text": "Sampling Procedure & Justification\nRunning the entire cleaned and processed dataset post-data cleaning, PCA, and feature extraction would be very resource intensive and not feasible in a local RStudio environment to generate visualizations of the graph. Therefore, we propose a sampling approach that draws a representative sample of the datasetâ€™s entire remaining feature space. The methodology for sampling the dataset is explained below.\nDue to the lengthy computation time of our edge-generating function, we have chosen to use samples of our full data to analyze the network. A one-thousand node sample takes approximately one minute to generate edges, a two-thousand sample take around ten minutes. This increase in time makes it unfeasible to use larger samples, let alone the entire data set of around 700 thousand nodes. Therefore, we will keep our sample sizes in the 1000 to 2000 range.\nThe percentage of fraudulent nodes in the full data set is approximately 1%. To ensure this proportion is consistent in our sample we use stratified sampling. Stratified sampling samples 1% of the data from a strata of only fraudulent nodes and the other 99% of the data from a strata of only the non-fraudulent nodes.\nPrior to using a sample in our project, we ensure that the sample is representative of the entire data set by applying the Chi-Squared test to our sample. The Chi-Squared test will determine if there is a significant difference between the values in the columns of the sample and in the full data set. The Chi-Squared test generates p-values for each column in a sample. A p-value of less than 0.05 will signal a significant difference between the sample and the full data set for that particular column. By conducting the Chi-Squared test on a given sample we ensure that it is sufficiently representative of the entire data set.\n\n# Percentage of fraudulent nodes in the data frame:\n# fraud_percentage = ((bankfraud_data$fraud_bool == 1)/nrow(bankfraud_data))*100\n# fraud_percentage\n# str(data_sample)\n# str(binned_bankfraud_data)\n\n# Factor data for chi_Squared test:\ndata_sample$payment_type = as.factor(data_sample$payment_type)\ndata_sample$bank_branch_count_8w = as.factor(data_sample$bank_branch_count_8w)\ndata_sample$zip_count_4w = as.factor(data_sample$zip_count_4w)\ndata_sample$name_email_similarity = as.factor(data_sample$name_email_similarity)\ndata_sample$bank_months_count = as.factor(data_sample$bank_months_count)\ndata_sample$housing_status = as.factor(data_sample$housing_status)\ndata_sample$velocity_6h = as.factor(data_sample$velocity_6h)\ndata_sample$current_address_months_count = as.factor(data_sample$current_address_months_count)\n\nbinned_bankfraud_data$payment_type = as.factor(binned_bankfraud_data$payment_type)\nbinned_bankfraud_data$bank_branch_count_8w = as.factor(binned_bankfraud_data$bank_branch_count_8w)\nbinned_bankfraud_data$zip_count_4w = as.factor(binned_bankfraud_data$zip_count_4w)\nbinned_bankfraud_data$name_email_similarity = as.factor(binned_bankfraud_data$name_email_similarity)\nbinned_bankfraud_data$bank_months_count = as.factor(binned_bankfraud_data$bank_months_count)\nbinned_bankfraud_data$housing_status = as.factor(binned_bankfraud_data$housing_status)\nbinned_bankfraud_data$velocity_6h = as.factor(binned_bankfraud_data$velocity_6h)\nbinned_bankfraud_data$current_address_months_count = as.factor(binned_bankfraud_data$current_address_months_count)\n\n# Chi-Squared test:\nchi_squared_results = list()\n\nfor (col in names(data_sample)[-c(1,3:6,13)]) {\n  population_counts = table(binned_bankfraud_data[[col]])\n  sample_counts = table(data_sample[[col]])\n  \n  all_levels = names(population_counts)\n  sample_counts = sample_counts[all_levels]\n  \n  sample_counts[is.na(sample_counts)] = 0\n  \n  chi_test = chisq.test(x = sample_counts, p = population_counts/sum(population_counts))\n  \n  chi_squared_results[[col]] = chi_test$p.value\n}\n\nWarning in chisq.test(x = sample_counts, p =\npopulation_counts/sum(population_counts)): Chi-squared approximation may be\nincorrect\nWarning in chisq.test(x = sample_counts, p =\npopulation_counts/sum(population_counts)): Chi-squared approximation may be\nincorrect\nWarning in chisq.test(x = sample_counts, p =\npopulation_counts/sum(population_counts)): Chi-squared approximation may be\nincorrect\nWarning in chisq.test(x = sample_counts, p =\npopulation_counts/sum(population_counts)): Chi-squared approximation may be\nincorrect\nWarning in chisq.test(x = sample_counts, p =\npopulation_counts/sum(population_counts)): Chi-squared approximation may be\nincorrect\nWarning in chisq.test(x = sample_counts, p =\npopulation_counts/sum(population_counts)): Chi-squared approximation may be\nincorrect\nWarning in chisq.test(x = sample_counts, p =\npopulation_counts/sum(population_counts)): Chi-squared approximation may be\nincorrect\nWarning in chisq.test(x = sample_counts, p =\npopulation_counts/sum(population_counts)): Chi-squared approximation may be\nincorrect\n\nchi_squared_df = data.frame(Column = names(chi_squared_results), P_Value = unlist(chi_squared_results))\n\nprint(chi_squared_df)\n\n                                                   Column   P_Value\npayment_type                                 payment_type 0.9544506\nbank_branch_count_8w                 bank_branch_count_8w 0.1846868\nzip_count_4w                                 zip_count_4w 0.6795854\nname_email_similarity               name_email_similarity 0.1060530\nbank_months_count                       bank_months_count 0.2550108\nhousing_status                             housing_status 0.8161662\nvelocity_6h                                   velocity_6h 0.8487415\ncurrent_address_months_count current_address_months_count 0.3152431\nbinary_combination_value         binary_combination_value 0.9999974"
  },
  {
    "objectID": "code/index.html#research-question-1-which-were-the-key-fraudulent-players-within-the-network",
    "href": "code/index.html#research-question-1-which-were-the-key-fraudulent-players-within-the-network",
    "title": "Bank Account Fraud Detection - COSC 421 Course Project",
    "section": "Research Question 1: Which were the key fraudulent players within the network?",
    "text": "Research Question 1: Which were the key fraudulent players within the network?\nThis research question aims to determine the most important fraudulent players within the sample taken of the network. Although this graph will be a sample of the entire graph, as specified from the rationale of taking a sample, it will be a representative one of the entire dataset, therefore, identifying important fraudulent bank account creations from this subgraph of customers bank account requests will lead us to finding key fraudulent bank account requests that could have influence over other fraudulent bank account requests, and lead to further discoveries of fraud rings."
  },
  {
    "objectID": "code/index.html#research-question-2-were-there-any-specific-fraudulent-groups-within-the-network-that-could-be-collaborating-to-defraud-the-bank-and-if-so-what-were-their-characteristics",
    "href": "code/index.html#research-question-2-were-there-any-specific-fraudulent-groups-within-the-network-that-could-be-collaborating-to-defraud-the-bank-and-if-so-what-were-their-characteristics",
    "title": "Bank Account Fraud Detection - COSC 421 Course Project",
    "section": "Research Question 2: Were there any specific fraudulent groups within the network that could be collaborating to defraud the bank? And if so, what were their characteristics?",
    "text": "Research Question 2: Were there any specific fraudulent groups within the network that could be collaborating to defraud the bank? And if so, what were their characteristics?"
  },
  {
    "objectID": "code/index.html#research-question-3-what-was-the-average-profile-of-a-fraudulent-customer",
    "href": "code/index.html#research-question-3-what-was-the-average-profile-of-a-fraudulent-customer",
    "title": "Bank Account Fraud Detection - COSC 421 Course Project",
    "section": "Research Question 3: What was the average profile of a fraudulent customer?",
    "text": "Research Question 3: What was the average profile of a fraudulent customer?"
  },
  {
    "objectID": "code/index.html#research-question-4-what-differences-exist-between-fraudulent-account-applications-and-non-fraudulent-account-applications",
    "href": "code/index.html#research-question-4-what-differences-exist-between-fraudulent-account-applications-and-non-fraudulent-account-applications",
    "title": "Bank Account Fraud Detection - COSC 421 Course Project",
    "section": "Research Question 4: What differences exist between fraudulent account applications and non-fraudulent account applications?",
    "text": "Research Question 4: What differences exist between fraudulent account applications and non-fraudulent account applications?"
  },
  {
    "objectID": "code/index.html#interpretation-summary",
    "href": "code/index.html#interpretation-summary",
    "title": "Bank Account Fraud Detection - COSC 421 Course Project",
    "section": "Interpretation Summary",
    "text": "Interpretation Summary"
  },
  {
    "objectID": "code/index.html#conclusion",
    "href": "code/index.html#conclusion",
    "title": "Bank Account Fraud Detection - COSC 421 Course Project",
    "section": "Conclusion",
    "text": "Conclusion"
  }
]